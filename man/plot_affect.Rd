% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_affect.R
\name{plot_affect}
\alias{plot_affect}
\title{Plot an individual's mean posterior predictions compared to their raw affect
ratings}
\usage{
plot_affect(
  data,
  plt_type = c("individual", "grouped", "weights"),
  adj_order = c("happy", "confident", "engaged"),
  nouns = c("Happiness", "Confidence", "Engagement"),
  id_no = NULL,
  r2_coords = c(0.9, 0.8),
  cred = c(0.95, 0.99),
  legend_pos = "right",
  pal = NULL,
  font = "",
  font_size = 11
)
}
\arguments{
\item{data}{Either a list of outputs from \link{get_affect_ppc}, or weights from
\link{get_affect_wts}.}

\item{plt_type}{Possible types are "grouped" or "individual" (for
\link{get_affect_ppc} outputs) or "weights" (for \link{make_par_df} output).}

\item{adj_order}{Same as \code{\link[=fit_learning_model]{fit_learning_model()}}.}

\item{nouns}{Formatted noun versions of the adjectives, in order.}

\item{id_no}{If \code{grouped == FALSE}, a participant number to plot. If
left as \code{NULL}, defaults to the individual with the median \eqn{R^2} for
each adjective.}

\item{r2_coords}{If \code{grouped == FALSE}, coordinates to print the
\eqn{R^2} value.}

\item{cred}{Same as \link{plot_glm}, ignored unless \code{plt_type == "weights"}.}

\item{legend_pos, pal, font, font_size}{Same as \link{plot_import}.}
}
\value{
A single or list of \code{ggplot} object(s) depending on type.
}
\description{
\code{plot_affect} is capable of plotting either grouped or
individual-level posterior predictions (vs. raw observations) for a defined
list of posterior predictions and/or grouping.
}
\examples{
\dontrun{
fit_affect <- fit_learning_model(
  example_data$nd,
  model = "2a",
  affect = TRUE,
  exp_part = "training",
  algorithm = "fullrank"
)

fit_dfs <- list()
for (adj in c("happy", "confident", "engaged")) {
  fits_dfs[[adj]] <- get_affect_ppc(fit_affect$draws, fit_affect$raw_df, adj = adj)
}

# Grouped plot
plot_affect(fit_dfs, plt_type = "grouped")

# Individual-level median posterior predictions
plot_affect(fit_dfs, plt_type = "individual", r2_coords = c(0.8, 0.97))

# Weight plot
aff_wts <- get_affect_wts(fit_affect$summary)
plot_affect(aff_wts, plt_type = "weights"))
}

}
