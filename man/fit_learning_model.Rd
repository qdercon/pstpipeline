% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_learning_model.R
\name{fit_learning_model}
\alias{fit_learning_model}
\title{General function to run Bayesian models using cmdstanr}
\usage{
fit_learning_model(
  df_all,
  model,
  vb = TRUE,
  stan_dir = "stan_files/",
  test = FALSE,
  ppc = vb,
  diagnostics = !vb,
  task_excl = TRUE,
  accuracy_excl = FALSE,
  save_model_as = "",
  out_dir = "cmdstan_output/",
  outputs = c("summary", "draws_df"),
  save_outputs = TRUE,
  seed = 123,
  cores = 4,
  ...
)
}
\arguments{
\item{model}{Learning model to use, choose from \code{1a} or \code{2a}.}

\item{vb}{Use variational inference to get the approximate posterior? Default is \code{TRUE}
for computational efficiency.}

\item{stan_dir}{Directory where the stan files are stored.}

\item{test}{Fit the model to the test data?}

\item{ppc}{Generate quantities including mean parameters, log likelihood, and posterior predictions?
Intended for use with variational algorithm; for MCMC it is recommended to run the separate generate
quantities function as this is far less memory intensive.}

\item{diagnostics}{Outputs and saves diagnostics from \code{$cmdstan_diagnose}. This will not work on
saved model objects, nor will it work if \code{vb = TRUE}.}

\item{task_excl}{Apply task-related exclusion criteria (catch questions, digit span = 0)?}

\item{accuracy_excl}{Apply accuracy-based exclusion criteria (final block AB accuracy >= 0.6)?}

\item{save_model_as}{Name to give to saved model and used to name the .csv files and outputs. Defaults
to the Stan model name.}

\item{out_dir}{Output directory for model fit environment, plus all specified \code{outputs} if
\code{save_outputs = TRUE}.}

\item{outputs}{Specific outputs to save separately (in addition to the model environment itself).}

\item{seed}{Random seed to pass to CmdStan.}

\item{cores}{Number of CPU cores to run in parallel (passed to \code{options(mc.cores = cores)}).}

\item{...}{Other arguments passed to \code{cmdstanr::model$sample}. See the CmdStan user guide for full
details and defaults: \code{https://mc-stan.org/docs/2_28/cmdstan-guide/index.html}.}

\item{df}{List output from import_multiple.}
}
\value{

}
\description{
\code{fit_learning_model} uses the package \code{cmdstanr}, which is a lightweight R
interface to CmdStan. Please note that while it checks if the C++ toolchain is correctly
configured, running this function will not install CmdStan itself. This may be as simple as
running \code{cmdstanr::install_cmdstan()}, but may require some extra effort (e.g., pointing
R to the install location via \code{cmdstanr::set_cmd_path()}). This vignette explains
installation in more detail: https://mc-stan.org/cmdstanr/articles/cmdstanr.html.
}
\details{
\code{fit_learning_model} heavily leans on various helper functions from the \code{hBayesDM}
package (https://ccs-lab.github.io/hBayesDM/), and is nowhere near as flexible; instead it is
designed primarily to be less memory-intensive for our specific use-case and provide only
relevant output.
}
